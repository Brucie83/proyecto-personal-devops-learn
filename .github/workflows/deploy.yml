name: 🚀 Task Manager App - CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Ambiente a desplegar'
        required: true
        default: 'development'
        type: choice
        options:
        - development
        - staging
        - production

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  # Job 1: Testing y Validación
  test:
    name: 🧪 Tests y Validación
    runs-on: ubuntu-latest
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 🐳 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 📋 Validar Docker Compose
      run: |
        cd app
        docker compose config
        echo "✅ Docker Compose válido"
        
    - name: 🔍 Validar archivos de configuración
      run: |
        echo "Validando archivos de configuración..."
        cd app
        if [ -f ".env.example" ]; then
          echo "✅ .env.example encontrado"
        fi
        if [ -f "docker-compose.yml" ]; then
          echo "✅ docker-compose.yml encontrado"
        fi

  # Job 2: Build Backend
  build-backend:
    name: 🐍 Build Backend
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 🐳 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🐍 Build Backend Image
      run: |
        cd app
        docker build -t task-manager-backend ./backend
        echo "✅ Backend image built successfully"

  # Job 3: Build Frontend
  build-frontend:
    name: ⚛️ Build Frontend
    runs-on: ubuntu-latest
    needs: test
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 🐳 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: ⚛️ Build Frontend Image
      run: |
        cd app
        docker build -t task-manager-frontend ./frontend
        echo "✅ Frontend image built successfully"

  # Job 4: Integration Test
  integration-test:
    name: 🧪 Integration Tests
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 🐳 Setup Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: 🚀 Start Application Stack
      run: |
        cd app
        cp .env.example .env
        docker compose up -d
        
    - name: ⏳ Wait for services
      run: |
        echo "Waiting for services to be ready..."
        sleep 60
        
    - name: 🔍 Health Check
      run: |
        cd app
        echo "Checking service health..."
        
        # Check if containers are running
        docker compose ps
        
        # Test API endpoints
        curl -f http://localhost:8080/api/health || exit 1
        echo "✅ API health check passed"
        
    - name: 🧹 Cleanup
      run: |
        cd app
        docker compose down -v

  # Job 5: Deploy (solo en main branch)
  deploy:
    name: 🚀 Deploy
    runs-on: ubuntu-latest
    needs: integration-test
    if: github.ref == 'refs/heads/main'
    
    steps:
    - name: 📥 Checkout código
      uses: actions/checkout@v4
      
    - name: 📊 Generate Deployment Report
      run: |
        echo "## 🎉 Task Manager App - Deployment Report" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### ✅ Build Status:" >> $GITHUB_STEP_SUMMARY
        echo "- Backend: ✅ Built successfully" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend: ✅ Built successfully" >> $GITHUB_STEP_SUMMARY
        echo "- Integration Tests: ✅ Passed" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🏗️ Application Stack:" >> $GITHUB_STEP_SUMMARY
        echo "- Backend: Flask + PostgreSQL + Redis" >> $GITHUB_STEP_SUMMARY
        echo "- Frontend: React + TypeScript + TailwindCSS" >> $GITHUB_STEP_SUMMARY
        echo "- Infrastructure: Docker Compose + Nginx" >> $GITHUB_STEP_SUMMARY
        echo "- Monitoring: Prometheus + Grafana" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "### 🔗 Quick Start:" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`bash" >> $GITHUB_STEP_SUMMARY
        echo "git clone https://github.com/${{ github.repository }}.git" >> $GITHUB_STEP_SUMMARY
        echo "cd proyecto-personal-devops-learn/app" >> $GITHUB_STEP_SUMMARY
        echo "./start.sh" >> $GITHUB_STEP_SUMMARY
        echo "\`\`\`" >> $GITHUB_STEP_SUMMARY
